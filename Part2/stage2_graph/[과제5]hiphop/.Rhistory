legend(0.3, 0.9 ,"hiphop 가사 단어 빈도 분석", cex=1, fill=NA, border=NA, bg="white",
text.col="red",text.font=2,box.col="red")
#==================================================================================
write(unlist(freq1),'aa.txt')
rev<-read.table("aa.txt", header=TRUE, fill=TRUE)
nrow(rev)
wordcount<-table(rev)
head(sort(wordcount, decreasing=T),10)
top10 <- head(sort(freq1, decreasing=T),10)
top10
pct <- round(top10/sum(top10) * 100 ,1)
names(top10)
lab <- paste(names(top10),"\n",pct,"%", sep = '')
#일반 파이
pie(top10, main="hiphop 가사 단어 빈도 분석", col=palete,
cex=0.8,labels = lab)
#ggplot로 파이 만들기
str(top10) #데이터프레임으로 바꾸기
df_top10<-as.data.frame(top10)
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0)
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0)
df_top10
ggplot(df_top10, aes(x='', y=top10, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0)
top10
df_top10
ggplot(df_top10, aes(x=top10, y='', fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0)
top10
df_top10
ggplot(df_top10, aes(x='', y=rev, fill=df_top10)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0)
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity') +
coord_polar("y", start = 0)
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')+
ggtitle('hiphop 가사 단어 빈도 분석')
windowsFonts()
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')+
ggtitle('hiphop 가사 단어 빈도 분석')
rev
setwd("D:/Workspace/R_Data_Analysis/R-lecture/Part2/stage2_graph/Ex01_Jeju")
mergeUserDic(data.frame(readLines("제주도여행지.txt"), "ncn"))
txt <- readLines("jeju.txt")
place <- sapply(txt, extractNoun, USE.NAMES=F)
head(unlist(place), 30)
cdata <- unlist(place)
place <- str_replace_all(cdata, "[^[:alpha:]]", "")  # 한글, 영어외는 삭제
place <- gsub(" ", "", place)
txt <- readLines("제주도여행코스gsub.txt")   # 삭제할 데이터
for(i in 1:length(txt)) {
place <-gsub((txt[i]), "", place)
}
place <- Filter(function(x) {nchar(x) >= 2}, place)   # 2글자 이상
write(unlist(place),"jeju_2.txt")
rev <- read.table("jeju_2.txt")
rev
nrow(rev)
wordcount <- table(rev)
head(sort(wordcount, decreasing=T),30)
# 추천 후보지 10개 그래프 그리기
top10 <- head(sort(wordcount, decreasing=T), 10)
top10
rev
# ggplot pie chart 그리기
str(top10)
df_top10 <- as.data.frame(top10)
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')
#==================================================================================
write(unlist(freq1),'aa.txt')
rev<-read.table("aa.txt", header=TRUE, fill=TRUE)
rev
setwd("D:/Workspace/R_Data_Analysis/R-lecture/Part2/stage2_graph/[과제5]hiphop")
#================================================
data1<-readLines('hiphop.txt')
data1 <- sapply(data1,extractNoun,USE.NAMES=F)
corp1 <- Corpus(VectorSource(data1))
tdm <- TermDocumentMatrix(corp1)
m <- as.matrix(tdm)
corp2 <- tm_map(corp1,stripWhitespace)
corp2 <- tm_map(corp2,removeNumbers)
corp2 <- tm_map(corp2,removePunctuation)
corp2 <- tm_map(corp2,removeWords,stopwords('en'))
#==================================================================================
write(unlist(corp2),'aa.txt')
rev<-read.table("aa.txt", header=TRUE, fill=TRUE)
tdm2 <- TermDocumentMatrix(corp2)
tdm2
m2 <- as.matrix(tdm2)
m2
class(m2)
dim(m2)
m2
colnames(m2)<-c(1:4261)
m2
freq1<-sort(rowSums(m2), decreasing = T)
top10 <- head(sort(freq1, decreasing=T),10)
top10
write(unlist(top10),'aa.txt')
rev<-read.table("aa.txt", header=TRUE, fill=TRUE)
rev
nrow(rev)
wordcount<-table(rev)
head(sort(wordcount, decreasing=T),10)
#ggplot로 파이 만들기
str(top10) #데이터프레임으로 바꾸기
df_top10<-as.data.frame(top10)
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')+
ggtitle('hiphop 가사 단어 빈도 분석')
write(unlist(freq1),'aa.txt')
rev<-read.table("aa.txt", header=TRUE, fill=TRUE)
rev
nrow(rev)
wordcount<-table(rev)
head(sort(wordcount, decreasing=T),20)
names(top10)
top10 <- head(sort(rev, decreasing=T),10)
top10 <- head(sort(rev, decreasing=T),10)
freq1
write(unlist(freq1),'aa.txt')
rev<-read.table("aa.txt", header=TRUE, fill=TRUE)
rev
nrow(rev)
wordcount<-table(rev)
head(sort(wordcount, decreasing=T),20)
pct <- round(top10/sum(top10) * 100 ,1)
names(top10)
lab <- paste(names(top10),"\n",pct,"%", sep = '')
lab
#일반 파이
pie(top10, main="hiphop 가사 단어 빈도 분석", col=palete,
cex=0.8,labels = lab)
#ggplot로 파이 만들기
str(top10) #데이터프레임으로 바꾸기
df_top10<-as.data.frame(top10)
df_top10
ggplot(df_top10, aes(x='', y=Freq, fill=rev)) +
geom_bar(width=1, stat='identity')+
ggtitle('hiphop 가사 단어 빈도 분석')
ggplot(df_top10, aes(x='', y=top, fill=rev)) +
geom_bar(width=1, stat='identity')+
ggtitle('hiphop 가사 단어 빈도 분석')
ggplot(df_top10, aes(x='', y=top10, fill=rev)) +
geom_bar(width=1, stat='identity')+
ggtitle('hiphop 가사 단어 빈도 분석')
ggplot(df_top10, aes(x='', y=c(1:10), fill=rev)) +
geom_bar(width=1, stat='identity')+
ggtitle('hiphop 가사 단어 빈도 분석')
setwd("D:/Workspace/R_Data_Analysis/R-lecture/Part2/stage2_graph/[과제5]hiphop")
txt <- readLines("hiphop.txt")
head(txt)
# step 2. 특수문자 제거
txt <- stringr::str_replace_all(txt,"\\W"," ")
head(txt)
txt <- stringr::str_replace_all(txt,"[^[:alpha:]]"," ")
txt
# step 3. 명사만 추출
nouns <-
sapply(
txt,
KoNLP::extractNoun,
USE.NAMES = F
)
class(nouns)
nouns
# step 4. 단어별 빈도표 작성
wordcount <- table(unlist(nouns))
df_word <- as.data.frame(wordcount, stringsAsFactors = F)
# step 5. 변수명 수정
names(df_word) # 자동으로 Var1, Freq 생성됨
df_word <- dplyr::rename(
df_word,
word = Var1,
freq = Freq
)
# step 6. 두 글자 이상 단어 추출
df_word <- dplyr::filter(df_word, nchar(word)>=2)
df_word
# step 7. 빈도순 정렬 후 상위 20개 단어만 추출
top_20 <- df_word %>% dplyr::arrange(desc(freq)) %>% head(20)
top_20
wordcloud::wordcloud(
words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words = 200,
random.order =  F,
rot.per = .1,
scale = c(4,0.3),
colors = brewer.pal(8,"Dark2")
)
legend(0.3, 0.9 ,"hiphop 가사 단어 빈도 분석", cex=1, fill=NA, border=NA, bg="white",
text.col="red",text.font=2,box.col="red")
wordcloud::wordcloud(
words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words = 200,
random.order =  F,
rot.per = .1,
scale = c(3,0.3),
colors = brewer.pal(8,"Dark2")
)
legend(0.3, 0.9 ,"hiphop 가사 단어 빈도 분석", cex=1, fill=NA, border=NA, bg="white",
text.col="red",text.font=2,box.col="red")
wordcloud::wordcloud(
words = df_word$word,
freq = df_word$freq,
min.freq = 2,
max.words = 200,
random.order =  F,
rot.per = .1,
scale = c(3,0.3),
colors = palete
)
legend(0.3, 0.9 ,"hiphop 가사 단어 빈도 분석", cex=1, fill=NA, border=NA, bg="white",
text.col="red",text.font=2,box.col="red")
# step 3. 명사만 추출
nouns <- sapply(txt, extractNoun, USE.NAMES = F)
class(nouns)
nouns
# step 4. 단어별 빈도표 작성
wordcount <- table(unlist(nouns))
df_word <- as.data.frame(wordcount, stringsAsFactors = F)
# step 5. 변수명 수정
names(df_word) # 자동으로 Var1, Freq 생성됨
df_word <-rename(df_word, word = Var1, freq = Freq)
# step 6. 두 글자 이상 단어 추출
df_word <- filter(df_word, nchar(word)>=2)
df_word
# step 7. 빈도순 정렬 후 상위 20개 단어만 추출
top_20 <- df_word %>% dplyr::arrange(desc(freq)) %>% head(20)
top_20
top_20
# step 7. 빈도순 정렬 후 상위 20개 단어만 추출
top10 <- df_word %>%
arrange(desc(freq)) %>%
head(10)
top_10
palete<-brewer.pal(7, 'Set3')
wordcloud(words = df_word$word, freq = df_word$freq,  min.freq = 2,
random.order =  F,  rot.per = 0.1,  scale = c(3,0.3),
colors = palete
)
wordcloud(words = df_word$word, freq = df_word$freq,  min.freq = 2,
random.order =  F,  rot.per = 0.1,  scale = c(3,0.3),
colors = palete
))
wordcloud(words = df_word$word, freq = df_word$freq,  min.freq = 2,
random.order =  F,  rot.per = 0.1,  scale = c(3,0.3),
colors = palete)
legend(0.3, 0.9 ,"hiphop 가사 단어 빈도 분석", cex=1, fill=NA, border=NA, bg="white",
text.col="red",text.font=2,box.col="red")
# step 7. 빈도순 정렬 후 상위 10개 단어만 추출
top10 <- df_word %>%
arrange(desc(freq)) %>%
head(10)
top10
palete<-brewer.pal(7, 'Set3')
wordcloud(words = df_word$word, freq = df_word$freq,  min.freq = 2,
random.order =  F,  rot.per = 0.1,  scale = c(3,0.3),
colors = palete)
txt <- readLines("hiphop.txt")
corp1 <- Corpus(VectorSource(txt))
# 특수문자 제거
corp2 <- tm_map(corp1,stripWhitespace)
corp2 <- tm_map(corp1,removePunctuation)
# step 3. 명사만 추출
nouns <- sapply(corp2, extractNoun, USE.NAMES = F)
class(nouns)
nouns
# step 4. 단어별 빈도표 작성
wordcount <- table(unlist(nouns))
df_word <- as.data.frame(wordcount, stringsAsFactors = F)
# step 5. 변수명 수정
names(df_word) # 자동으로 Var1, Freq 생성됨
df_word
df_word <-rename(df_word, word = Var1, freq = Freq)
df_word <-rename(df_word, Var1<-word, Freq<-freq)
df_word <-rename(df_word, word = Var1, freq = Freq)
# step 5. 변수명 수정
names(df_word) # 자동으로 Var1, Freq 생성됨
df_word
df_word <-rename(df_word, word = Var1, freq = Freq)
df_word
# step 6. 두 글자 이상 단어 추출
df_word <- filter(df_word, nchar(word)>=2)
df_word
# step 7. 빈도순 정렬 후 상위 10개 단어만 추출
top10 <- df_word %>%
arrange(desc(freq)) %>%
head(10)
top10
palete<-brewer.pal(7, 'Set3')
wordcloud(words = df_word$word, freq = df_word$freq,  min.freq = 2,
random.order =  F,  rot.per = 0.1,  scale = c(3,0.3),
colors = palete)
legend(0.3, 0.9 ,"hiphop 가사 단어 빈도 분석", cex=1, fill=NA, border=NA, bg="white",
text.col="red",text.font=2,box.col="red")
#=============================================
str(top10) #데이터프레임으로 바꾸기
df_top10<-as.data.frame(top10)
df_top10
ggplot(df_top10, aes(x='', y=freq, fill=top10)) +
geom_bar(width=1, stat='identity')+
ggtitle('hiphop 가사 단어 빈도 분석')
ggplot(df_top10, aes(x=word, y=freq, fill=top10)) +
geom_bar(width=1, stat='identity')+
ggtitle('hiphop 가사 단어 빈도 분석')
ggplot(df_top10, aes(x=word, y=freq, fill=df_word)) +
geom_bar(width=1, stat='identity')+
ggtitle('hiphop 가사 단어 빈도 분석')
ggplot(df_top10, aes(x=word, y=freq) +
ggplot(df_top10, aes(x=word, y=freq)) +
geom_bar(width=1, stat='identity')+
ggtitle('hiphop 가사 단어 빈도 분석')
ggplot(df_top10, aes(x=word, y=freq) +
ggplot(df_top10)
ggplot(df_top10)
ggplot(df_top10, aes(x=word, y=freq)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석')
ggplot(df_top10, aes(x=word, y=freq)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
coord_polar("y", start = 0)
ggplot(df_top10, aes(x=word, y=freq, fill=df_word)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
coord_polar("y", start = 0)
ggplot(df_top10, aes(x=word, y=freq, fill=df_top10)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
coord_polar("y", start = 0)
ggplot(df_top10, aes(x=word, y=freq, fill=top10)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
coord_polar("y", start = 0)
ggplot(df_top10, aes(x='', y=word, fill=top10)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
coord_polar("y", start = 0)
ggplot(df_top10, aes(x='', y=freq, fill=top10)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
coord_polar("y", start = 0)
ggplot(top10, aes(x='', y=freq, fill=top10)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
coord_polar("y", start = 0)
ggplot(top10, aes(x='', y=freq, fill=df_word)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
coord_polar("y", start = 0)
#=============================================
str(top10) #데이터프레임으로 바꾸기
library(KoNLP)
library(dplyr)
library(rJava)
library(tm)
library(stringr)
library(wordcloud)
library(RColorBrewer)
library(dplyr)
library(ggplot2)
library(plotrix)
library(extrafont)
useSejongDic()
txt <- readLines("hiphop.txt")
corp1 <- Corpus(VectorSource(txt))
# 특수문자 제거
corp2 <- tm_map(corp1,stripWhitespace)
corp2 <- tm_map(corp1,removePunctuation)
# step 3. 명사만 추출
nouns <- sapply(corp2, extractNoun, USE.NAMES = F)
class(nouns)
nouns
# step 4. 단어별 빈도표 작성
wordcount <- table(unlist(nouns))
df_word <- as.data.frame(wordcount, stringsAsFactors = F)
# step 5. 변수명 수정
names(df_word) # 자동으로 Var1, Freq 생성됨
df_word
# step 6. 두 글자 이상 단어 추출
df_word <- filter(df_word, nchar(Var1)>=2)
df_word
# step 7. 빈도순 정렬 후 상위 10개 단어만 추출
top10 <- df_word %>%
arrange(desc(Freq)) %>%
head(10)
top10
palete<-brewer.pal(7, 'Set3')
wordcloud(words = df_word$Var1, freq = df_word$Freq,  min.freq = 2,
random.order =  F,  rot.per = 0.1,  scale = c(3,0.3),
colors = palete)
#=============================================
str(top10) #데이터프레임으로 바꾸기
ggplot(top10, aes(x='', y=Freq, fill=df_word)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
coord_polar("y", start = 0)
ggplot(top10, aes(x='', y=Freq, fill=Var1)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
coord_polar("y", start = 0)
df_word <-rename(df_word, word = Var1)
# step 6. 두 글자 이상 단어 추출
df_word <- filter(df_word, nchar(Var1)>=2)
# step 6. 두 글자 이상 단어 추출
df_word <- filter(df_word, nchar(word)>=2)
# step 7. 빈도순 정렬 후 상위 10개 단어만 추출
top10 <- df_word %>%
arrange(desc(Freq)) %>%
head(10)
#=============================================
str(top10)
ggplot(top10, aes(x='', y=Freq, fill=Var1)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
coord_polar("y", start = 0)
ggplot(top10, aes(x='', y=Freq, fill=word)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
coord_polar("y", start = 0)
ggplot(top10, aes(x='', y=Freq, fill=word)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
ggplot(top10, aes(x='', y=Freq, fill=word)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석')
ggplot(top10, aes(x='', y=Freq, fill=word)) +
geom_bar() +
ggtitle('hiphop 가사 단어 빈도 분석')
ggplot(top10, aes(x='', y=Freq, fill=word)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석')
ggplot(top10, aes(x='', y=Freq, fill=word)) +
geom_bar(stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석')
ggplot(top10, aes(x=word, y=Freq, fill=word)) +
geom_bar(stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석')
windowsFonts(malgun = "맑은 고딕")
theme_update(text = element_text(family = "malgun"))
options(digits = 2)
top10 <- top10 %>%
mutate(pct = Freq / sum(Freq) * 100) %>%
mutate(ylabel = paste(sprintf("%s\n%4.1f", word, pct), '%', sep='')) %>%
arrange(desc(word)) %>%
mutate(ypos = cumsum(pct) - 0.5*pct)
top10
# 제목 장식하기
ggplot(top10, aes(x='', y=Freq, fill=word)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
coord_polar("y", start = 0) +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue")) +
geom_text(aes(y=ypos, label=ylabel), color='black')
# 제목 장식하기
ggplot(top10, aes(x='', y=Freq, fill=word)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
coord_polar("y", start = 0) +
geom_text(aes(y=ypos, label=ylabel), color='black')
# 제목 장식하기
ggplot(top10, aes(x='', y=Freq, fill=word)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
coord_polar("y", start = 0) +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
ggplot(top10, aes(x=word, y=Freq, fill=word)) +
geom_bar(stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석')+
geom_text(aes(y=ypos, label=ylabel), color='black')
ggplot(top10, aes(x=word, y=Freq, fill=word)) +
geom_bar(stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석')+
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
# 파이차트
ggplot(top10, aes(x='', y=Freq, fill=word)) +
geom_bar(width=1, stat='identity') +
ggtitle('hiphop 가사 단어 빈도 분석') +
coord_polar("y", start = 0) +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
top10 <- df_word %>%
arrange(desc(Freq)) %>%
head(10)
top10
palete<-brewer.pal(7, 'Set3')
wordcloud(words = df_word$word, freq = df_word$Freq,  min.freq = 2,
random.order =  F,  rot.per = 0.1,  scale = c(3,0.3),
colors = palete)
legend(0.3, 0.9 ,"hiphop 가사 단어 빈도 분석", cex=1, fill=NA, border=NA, bg="white",
text.col="red",text.font=2,box.col="red")
