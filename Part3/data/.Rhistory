var1 - var2
var2<-c(3,4,5)
var1 - var2
setdiff(var1,var2)
setdiff(var2, var1)
intersect(var1, var2)
fruits <-c(10,20,30); fruits
names(fruits)<-c('apple', 'banana','mango')
fruits
var5<-seq(1:6)
var5<-seq(1:6); var5
var6 <-seq(2, -2); var6
even <-seq(2,10,2); even
odd <-seq(1,10,2); odd
var8<-rep(1:3,2); var8
var9<-rep(1:3, each=2); var9
length(var1)
5%in% even
4 %in% even
date4<-seq(from=as.Date('2015-01-01'), to=as.Date('2015-01-31'), by=1)
date4
#===========================================================================
vec1<-c('사과', '배','감','버섯','고구마'); vec1
vec1[-3]
#===========================================================================
vec2<-c('봄','여름','가을','겨울')
vec3<-c('봄','여름','늦여름','초가을')
vec2+vec3
cat(vec2+vec3)
union(vec2,vec3)
setdiff(vec1, vec2)
setdiff(vec2, vec3)
intersect(vec2, vec3)
mat1 <-matrix(c(1,2,3,4))
mat1
mat2 <- matrix(c(1,2,3,4), nrow=2); mat2
mat2 <- matrix(c(1,2,3,4), nrow=2, byrow=T); mat2
mat2[1,1]
mat2[1,]
mat2[,1]
mat4<-matrix(seq(1:9), nrow=3, byrow=T); mat4
mat4<-rbind(mat4, c(10,11,12)); mat4
mar4<-cbind(mat4, c(13,14,15,16)); mat4
mar4<-cbind(mat4, c(13,14,15,16)); mat4
mat4<-cbind(mat4, c(13,14,15,16)); mat4
mat5<-matrix(c('a','b','c','d'), nrow=2, byrow=T)
mat5<-cbind(mat5, c('e','f'))
mat5
colnames(mat5) <-c('First', 'Second','Third')
mat5
#연습문제
season <-matrix(c("봄", "여름", "가을","겨울"))
#연습문제
season <-matrix(c("봄", "여름", "가을","겨울")); season
#연습문제
season <-matrix(c("봄", "여름", "가을","겨울"), nrow=2); season
season <-matrix(c("봄", "여름", "가을","겨울"), nrow=2, byrow=T); season
season[,2]
season_2<-cbind(season, c("초봄","초가을")); season_2
season_2<-rbind(season, c("초봄","초가을")); season_2
season_3<-cbind(season,c("초여름", 초겨울","한겨울"))
season_3<-cbind(season,c("초여름", 초겨울","한겨울")); season_3
season_3<-cbind(season,c("초여름", '초겨울","한겨울")); season_3
season_3<-cbind(season, c("초여름", '초겨울","한겨울")); season_3
season_3<-cbind(season, c("초여름", "초겨울","한겨울")); season_3
season_3<-cbind(season_2, c("초여름", "초겨울","한겨울")); season_3
#Array!!!
array1 <-array(c(1:12), dim=c(4,3)); array1
array1 <-array(c(1:12), dim=c(4,3), byrow=T); array1
array1 <-array(c(1:12), dim=c(4,3), nrow=3); array1
array1 <-array(c(1:12), dim=c(4,3), nrow=4); array1
array2 <-array(c(1:12), dim=c(2,2,3)); array2
array2 <-array(c(1:27), dim=c(3,3,3)); array2
array2 <-array(c(1:27), dim=c(3,3,4)); array2 #3행3열짜리가 3개!
array2 <-array(c(1:27), dim=c(3,3,4)); array2 #3행3열짜리가 4개!
array2[1,,]
#List
list1<-list(name='홍길동', address='전국', Tel='010-1234-5678', Age=300)
#List
list1<-list(name='홍길동', address='전국', Tel='010-1234-5678', Age=300); list1
list1[1]
list1$name
list1[1:2]
list1%birth <-'1719-10-23'
list1$birth <-'1719-10-23'
list1$birth <-'1719-10-23'; list1
list1$name <-c('홍길동','rlarlfehd')
list1$name <-c('홍길동','rlarlfehd'); list1
list1$birth<-NULL
list1$birth<-NULL; list1
#Data Frame
no <-c(1,2,3,4)
name<-c('Apple','Peach','Banana','Grape')
qty<-c(5,2,4,7)
sales<-data.frame(NO=no, NAME=name,PRICE=price, QTY=qyu)
sales<-data.frame(NO=no, NAME=name,PRICE=price, QTY=qyu); sales
sales<-data.frame(NO=no, NAME=name,PRICE=price, QTY=qty); sales
price<-c(500,200,100,50)
qty<-c(5,2,4,7)
sales<-data.frame(NO=no, NAME=name,PRICE=price, QTY=qty); sales
sales2<-df1<-data.frame(sales1);df1
df1<-data.frame(sales1);df1
df1<-data.frame(sales1); df1
df1<-data.frame(sales); df1
names(df1)<-c('NO','NAME','PRICE','QTY'); df1
sales$NAME
sales[1,]
sales[c(1,2), ]
sales[,c(1:3)]
subset(sales, QTY<5)
subset(sales, price=500)
subset(sales, PRICE==500)
subset(sales,PRICE!=500)
subset(sales,NAME==grape)
subset(sales,NAME=grape)
subset(sales,NAME='grape')
subset(sales,NAME='Grape')
subset(sales,NAME=='Grape')
no <-c(1,2,3)
name<-c('apple','banana','peach')
price<-c(100,200,300)
df1<-data.frame(NO=no, NAME=name, PRICE=price); df1
no <-c(10,20,30)
name<-c('train','car','airplane')
price<-c(1000,2000,3000)
df2<-data.frame(NO=no, NAME=name, PRICE=price); df2
df2<- cbind(df1, df2); df3
df3<- cbind(df1, df2); df3
df3$NAME #앞에 있는 과일만
df3[,5]
df4<-rbind(df1, df2)
df4<-rbind(df1, df2); df4
df4<-rbind(df1, df2); df4
df1<-data.frame(NO=no, NAME=name, PRICE=price); df1
df2<-data.frame(NO=no, NAME=name, PRICE=price); df2
df4<-rbind(df1, df2); df4
df5<-data.frame(name=c('apple','banana','cherry'), price=c(300,200,100)); df5
df6<- data.frame(name=c('apple','cherry','berry'), qty=c(10,20,30)); df6
df3[,5]
df3$NAME #앞에 있는 과일만
df3<- cbind(df1, df2); df3
df4<-rbind(df1, df2); df4
df5<-data.frame(name=c('apple','banana','cherry'), price=c(300,200,100)); df5
df6<- data.frame(name=c('apple','cherry','berry'), qty=c(10,20,30)); df6
merge(df5, df6)
merge(df5, df6), all=T
merge(df5, df6, all=T)
cbind(df5, df6)
cbind(df6, df5)
df5<-rbind(df5, new); df5
new <-data.frame(name='mango',price=400)
df5<-rbind(df5, new); df5
df5<-rbind(df5, data.frame(name='mango',price=400)); df5
df5$mango<-NULL
df5
df5<-cbind(df5, data.frame(quantity=c(10,20,30,40,50)); df5
df5<-cbind(df5, data.frame(quantity=c(10,20,30,40,50))); df5
no<-c(1,2,3,4,5)
name<-c('서진수','주시현','최경우','아동근','윤정웅')
address<-c('서울','대전','포항','경주','경기')
Tel<-c('독서','미술','놀고먹기','먹고놀기','노는애감시하기')
tel<-c('독서','미술','놀고먹기','먹고놀기','노는애감시하기')
member<-data.frame(NO=no, NAME=name,AFFRESS=address, TEL=tel, HOBBY=hobby)
member<-data.frame(NO=no, NAME=name, ADDRESS=address, TEL=tel, HOBBY=hobby)
hobby<-c('독서','미술','놀고먹기','먹고놀기','노는애감시하기')
tel<-c(1111,2222,3333,4444,)
member<-data.frame(NO=no, NAME=name, ADDRESS=address, TEL=tel, HOBBY=hobby)
member<-data.frame(NO=no, NAME=name, ADDRESS=address, TEL=tel, HOBBY=hobby); member
tel<-c(1111,2222,3333,4444,5555)
member<-data.frame(NO=no, NAME=name, ADDRESS=address, TEL=tel, HOBBY=hobby); member
member<-data.frame(NO=no, NAME=name, ADDRESS=address, \tTEL=tel, HOBBY=hobby); member
member<-data.frame(NO=no, NAME=name, ADDRESS=address, TEL=tel, HOBBY=hobby); member
member2<-subset(member, select=c(NO, NAME, TEL)); member2
member3<-subset(member, select=-TEL); member3
colnames(member3)<-c('번호',' 이름','주소','취미'); member3
sales
ncol(sales)
nrow(sales)
names(sales)
rownames(sales)
rownames(sales)<-c('one','tow','three','four');sales
sales[c(2,3,1),]
sales[,c(1,2,4,3)]
rownames(sales)<-c('one','two','three','four');sales
sales[c(2,3,1),]
sales[,c(1,2,4,3)]
sales[c(1,2,4,3)]
sales[c(1,2,4,3),]
sales[,c(1,2,4,3)]
colnames(member3)<-c('번호',' 이름','주소','취미'); member3
sales
ncol(sales)
no <-c(1,2,3,4)
name<-c('Apple','Peach','Banana','Grape')
price<-c(500,200,100,50)
qty<-c(5,2,4,7)
no <-c(1,2,3,4)
name<-c('Apple','Peach','Banana','Grape')
price<-c(500,200,100,50)
qty<-c(5,2,4,7)
sales<-data.frame(NO=no, NAME=name,PRICE=price, QTY=qty); sales
df1<-data.frame(sales); df1
names(df1)<-c('NO','NAME','PRICE','QTY'); df1
sales$NAME
sales[1,]
sales[c(1,2), ]
sales[,c(1:3)]
subset(sales, QTY<5)
subset(sales, PRICE==500)
subset(sales,PRICE!=500) #!=
subset(sales,NAME=='Grape') #==
no <-c(1,2,3)
name<-c('apple','banana','peach')
price<-c(100,200,300)
df1<-data.frame(NO=no, NAME=name, PRICE=price); df1
no <-c(10,20,30)
name<-c('train','car','airplane')
price<-c(1000,2000,3000)
df2<-data.frame(NO=no, NAME=name, PRICE=price); df2
df3<- cbind(df1, df2); df3
df3$NAME #앞에 있는 과일만
df3[,5]
df4<-rbind(df1, df2); df4
df5<-data.frame(name=c('apple','banana','cherry'), price=c(300,200,100)); df5
df6<- data.frame(name=c('apple','cherry','berry'), qty=c(10,20,30)); df6
merge(df5, df6) #공통된 원소만 나오네
merge(df5, df6, all=T) #개념이해inner join, outer join
rbind(df5, df6) #이름이 달라서 에러
cbind(df5, df6)
cbind(df6, df5)
new <-data.frame(name='mango',price=400)
df5<-rbind(df5, new); df5
df5<-rbind(df5, data.frame(name='mango',price=400)); df5
df5<-cbind(df5, data.frame(quantity=c(10,20,30,40,50))); df5
no<-c(1,2,3,4,5)
name<-c('서진수','주시현','최경우','아동근','윤정웅')
address<-c('서울','대전','포항','경주','경기')
hobby<-c('독서','미술','놀고먹기','먹고놀기','노는애감시하기')
tel<-c(1111,2222,3333,4444,5555)
member<-data.frame(NO=no, NAME=name, ADDRESS=address, TEL=tel, HOBBY=hobby); member
member2<-subset(member, select=c(NO, NAME, TEL)); member2
member3<-subset(member, select=-TEL); member3
colnames(member3)<-c('번호',' 이름','주소','취미'); member3
sales
ncol(sales)
nrow(sales)
names(sales)
rownames(sales)
rownames(sales)<-c('one','two','three','four');sales
sales[c(2,3,1),] #행의 출력순서 조정
sales[,c(1,2,4,3)]#열의 출력순서 조정!
df5.1<-df5[,-4]; df5.1
df5.1<-df5[,-4]; df5.1
df5.1<-df5[,-4]; df5.1 #행열 삭제
#Load and Save Data
list.files()
#Load and Save Data
list.files()
#Load and Save Data
list.files()
#Load and Save Data
list.files()
scan1<-scan('scan_1.txt'); scan1
setwd("~/")
setwd("D:/Workspace/R_Data_Analysis/Part3/data")
#Load and Save Data
list.files()
scan1<-scan('scan_1.txt'); scan1
scan2<-scan('scan_2.txt'); scan2
scan2<-scan('scan_2.txt', what=""); scan2
scan3 <-scan('scan_3.txt',what=""); scan3
scan4 <-scan('scan_4.txt',what=""); scan4
input<-scan()
input<-scan()
asdf
input<-scan(what="")
input
input3<-readline()
input3
input4<-readline("R u okay?:")
input5<-readLines('scan_4.txt')
input5
fruits <-read.table('fruits.txt')
fruits
fruits <-read.table('fruits.txt', header = T)
gruits
fruits
fruits2<-read.table('fruits_2.txt'); fruits
fruits2<-read.table('fruits_2.txt'); fruit2
fruit2<-read.table('fruits_2.txt'); fruit2
fruit2<-read.table('fruits_2.txt', skip=2); fruit2
fruit2<-read.table('fruits_2.txt', nrows=2); fruit2
f2top<-read.table('fruits_2.txt', nrow=2)
f2bottom<-read.table('fruits_2.txt',skip=3)
f2top; f2bottom
fruits3<-read.csv('fruits_3.csv')
fruits3
fruit3<-read.csv('fruits_3.csv')#header 가 관건
fruit3
fruit4<<-read.csv('fruits_4.csv')
fruit4
fruit4
label<-c('No','NAME','PRICE','QTY')
fruit4<-read.csv(fruits_4.csv, header = F, col.names=label)
fruit4
install.packages("googleVis")
library(googleVis)
install.packages("sqldf")
library(sqldf)
Fruits
write.csv(Fruits, "Fruits.sql.csv", quote=F.row.names=F)
write.csv(Fruits, "Fruits_sql.csv", quote=F,row.names=F)
fruits_2<-read.csv.sql("Fruits_sql.csv", sql="SELECT*FROM file WHERE Year =2008")
fruits_2
install.packages("XLconnect")
library(XLconnect)
install.packages("XLConnect")
library(XLConnect)
data1<-loadWorkbook("fruits_6.xls", create=T)
data2<-readWorksheet(data1, sheet="sheet1", startRow=1, endRow=8, startCol=1, endCol=5)
data2
fruits6<-read.delim("clipboard", header=T)
fruits6
install.packages('leadxl')
install.packages('readxl')
library(readxl)
data1<-loadWorkbook("fruits_6.xls", create=T)
data2<-readWorksheet(data1, sheet="sheet1", startRow=1, endRow=8, startCol=1, endCol=5) #시작행 끝행 지정가능
data2
fruits7
fruits7 <- read_excel("fruits_6.xls", # path
sheet = "Sheet1", # sheet name to read
range = "A2:D6", # cell range to read from
col_names = TRUE, # TRUE to use the first row as column names
col_types = "guess", # guess the types of columns
na = "NA") # Character vector of strings to use for missing values
fruits7
#Function
# 물음표?는 help 기능
vec1<-c(1:5)
vec2<-c('a','b','c','d','e')
max(vec1)
max(vex2)
max(vec2)
max(vec2)
vec2<-c('A','b','c','d','a')
max(vec2)
vec2<-c('a','b','c','d','e')
max(vec1)
max(vec2)
meac(vec1)
mean(vec2)
sd(vec1)
sum(vec1)
var(vec1)
library(googleVis)
Fruits
aggregate(Sales~Year,Fruits,Sum)
aggregate(Sales~Year, Fruits, sum)
aggregate(Sales~Year, Fruits, max)
aggregate(Sales~Year, Fruits, mean)
aggregate(Sales~Year, Fruits, sum)
aggregate(Sales~Year, Fruits, max)
aggregate(Sales~Fruit, Fruits, sum)
mat1<-matrix(c(1:6), nrow = 2, byrow=T); mat1
apply(mat1, 1, sum)   #1행 단위계산
apply(mat1, 1, prod)
apply(mat[2,3])
apply(mat[,c(2,3)], 1, sum)
list1 <-Friuts$Sales; list1
list2 <-list(Frius$Profit
apply(mat[,c(2,3)], 1, sum)
list1 <-Friuts$Sales; list1
list2 <-list(Frius$Profit
list1 <-list(Fruitss$Sales); list1
list2 <-list(Frius$Profit)
list2 <-list(Frius$Profit); list2
laspply(,(list, list2), max
laspply(c(list, list2), max
lapply(c(list, list2, max())
lapply(c(list1, list2, max())
llapply(,c(4,5) max)
lapply(,c(4,5) max)
tapply(Sales, Fruit, sum)
attach(Fruits)
vec1<-c(1:5)
vec2<-c(10:sum)
vec2<-seq(10,50,10)
input5<-readLines('scan_4.txt')
input5
#======================연습문제===================
data1<-read.csv("data1.csv")
#======================연습문제===================
data1<-read.csv("data1.csv")
data1
aggregate(Age~Year, data1, sum)
aggregate(연령별~Year, data1, sum)
aggregate(연령별~년, data1, sum)
vec1<ㅛㄷㅁㄱ\
data1
apply(data1,2.sum)
apply(data1,2,sum)
data1
apply(data1,2,sum)
apply(data1,[,c(1:5)],sum)
apply(data1,[,c(1:5)], sum)
apply(data1,[,c(1,2,3,4,5)], sum)
apply(data1[,c(1,2,3,4,5)], sum)
apply(data1[,c(1,2,3,4,5)],2, sum)
apply(data1[,c(1:5)],2, sum)
apply(data1[,c(1:5)],1, sum)
apply(data1[c(1:5),],1, sum)
apply(data1,1, sum)
apply(data1,2, sum)
#======================연습문제========================
data1<-read.csv("data1.csv")
data1
apply(data1,2,sum)
apply(data1[,c(2,3)],2,sum)
apply(data1[,c(1:14)],2,sum)
apply(data1[,c(1:13)],2,sum)
apply(data1[,c(1,2,3,4,5,6,7,8,9,10,11,12,13,14)],2,sum)
apply(data1[,c(1,2,3)],2,sum)
apply(data1[,c(2,3)],2,sum)
apply(data1[,c(1,2,3)],2,sum)
apply(data1[,c(1,2,3)],3,sum)
apply(data1[,c(,2,3)],2,sum)
apply(data1[,c(1,2)],2,sum)
apply(data1[,c(2:14)],2,sum)
apply(data1,1,sum)
apply(data1[,c(2:6)],1,sum)
data2<-read.csv("1-4호선승하차승객수.csv")
data2
aggregate(승차~노선번호, data2, sum)
aggregate(하차~노선번호, data2, sum)
apply(data2[,c(3,4)],2,sum)
aggregate(하차+승차~노선번호, data2, sum)
tapply(승차, 노선번호, sum)
tapply(승차, 노선번호, sum)
attach(data2)
tapply(승차, 노선번호, sum)
tapply(하차, 노선번호, sum)
apply(data1[,c(2:15)],2,sum)
apply(data1[,c(2:6)],1,sum)
apply(data1[,c(2:7)],1,sum)
apply(data1[,c(2:5)],1,sum)
apply(data1[,-1],1,sum)
sapply(data2[,c(3,4)],sum)
#Function
mat1<-matrix(c(1:6), nrow=2, byrow=T)
a<-rep(1, 3)
sweep(mat1, 2, a)
#Function
mat1<-matrix(c(2:7), nrow=2, byrow=T)
a<-rep(1, 3)
sweep(mat1, 2, a)
#Function
mat1<-matrix(c(1:6), nrow=2, byrow=T)
a<-rep(1, 3)
sweep(mat1, 2, a)
b<-matrix(c(2, 2))
sweep(mat1, 1, b)
b
a<-c(1,2,3,4,5); length(a)
library(googleVis)
a<-c(1,2,3,4,5); length(a)
length(mat1)
library(googleVis)
length(Fruits)
log(10)
log10(10)
sin(pi)
abx(-1) #절대값
abs(-1) #절대값
V2<-c(1,-2,3,-4)
abs(V2)
ceiling(2.3)
floor(2.3)
ceiling(-2.3)
floor(-2.3)
round(2.5)
round(2.6)
choose(5,3)
!choose()
!choose
myfunc <-function() {
return (10)
}
myfunc()
myfunc2 <-function(x){
y=x*x;
return(y)
}
myfunc2(-3)
func_test1<-function(a,b){
c=a-b
return(c)
}
func_test1(3,2)
func_test1(2,3)
func_test1<-function(a,b){
c=a-b
return(abs(c))
}
func_test1(3,2)
func_test1(2,3)
func_test2<-function(a,b){
god<-abs(func_test1(a,b))
return(god)
}
func_test2(3,2)
func_test2(2,3)
