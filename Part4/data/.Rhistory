graph<-data.frame(학생=g$학생, 교수=g$교수)
g<-graph.data.frame(graph1, directed = T)
plot(g,layout=layout.fruchterman.reingold, vertex.size=2, edge.arrow.size=0.5,
vertex.color='green', vertex.label=NA')
g<-read.csv('data/군집분석.csv', head=T)
graph<-data.frame(학생=g$학생, 교수=g$교수)
g<-graph.data.frame(graph1, directed = T)
plot(g,layout=layout.fruchterman.reingold, vertex.size=2, edge.arrow.size=0.5,
vertex.color='green', vertex.label=NA)
setwd("D:/Workspace/R_Data_Analysis/Part4/data")
g<-read.csv('data/군집분석.csv', head=T)
graph<-data.frame(학생=g$학생, 교수=g$교수)
g<-graph.data.frame(graph1, directed = T)
plot(g,layout=layout.fruchterman.reingold, vertex.size=2, edge.arrow.size=0.5,
vertex.color='green', vertex.label=NA)
g<-read.csv('data/군집분석.csv', head=T)
g<-read.csv('군집분석.csv', head=T)
graph<-data.frame(학생=g$학생, 교수=g$교수)
g<-graph.data.frame(graph1, directed = T)
plot(g,layout=layout.fruchterman.reingold, vertex.size=2, edge.arrow.size=0.5,
vertex.color='green', vertex.label=NA)
g<-read.csv('군집분석.csv', head=T)
graph<-data.frame(학생=g$학생, 교수=g$교수)
g<-graph.data.frame(graph1, directed = T)
plot(g,layout=layout.fruchterman.reingold, vertex.size=2, edge.arrow.size=0.5,
vertex.color='green', vertex.label=NA)
library(devtools)
library(d3Network)
library(devtools)
library(d3Network)
g<-read.csv('군집분석.csv', head=T)
graph<-data.frame(학생=g$학생, 교수=g$교수)
g<-graph.data.frame(graph1, directed = T)
g<-graph.data.frame(graph, directed = T)
plot(g,layout=layout.fruchterman.reingold, vertex.size=2, edge.arrow.size=0.5,
vertex.color='green', vertex.label=NA)
#모양 바꾸기
plot(g,layout=layout.kamada.kawai, vertex.size=2, edge.arrow.size=0.5,
vertex.color='green', vertex.label=NA)
plot(g,layout=layout.auto, vertex.size=2, edge.arrow.size=0.5,
vertex.color='green', vertex.label=NA)
plot(g,layout=layout.cicle, vertex.size=2, edge.arrow.size=0.5,
vertex.color='green', vertex.label=NA)
plot(g,layout=layout.sprint, vertex.size=2, edge.arrow.size=0.5,
vertex.color='green', vertex.label=NA)
plot(g,layout=layout.bipartite(), vertex.size=2, edge.arrow.size=0.5,
vertex.color='green', vertex.label=NA)
plot(g,layout=layout.bipartite, vertex.size=2, edge.arrow.size=0.5,
vertex.color='green', vertex.label=NA)
plot(g,layout=layout.davidson.harel, vertex.size=2, edge.arrow.size=0.5,
vertex.color='green', vertex.label=NA)
plot(g,layout=layout.kamada.kawai, vertex.size=2, edge.arrow.size=0.5,
vertex.color='green', vertex.label=NA)
V(g)$name
gubun<-V(g)$name
gubun1<-V(g)$name
gubun1
gubun<-str_sub(gubun1, start=1, end=1)
gubun
gubun1
gubun<-str_sub(gubun1, start=1, end=1)
library(stringr)
gubun<-str_sub(gubun1, start=1, end=1)
gubun
#학생은 레드로 교수는 그린으로
color<-c()
for (i in 1:length(gubun{}))
for (i in 1:length(gubun)){
if(gubun[i]=='S'){
colors<-c(color,'red')}
else {
colors<-c(colors,'green')}
}
sizes<-c()
for (i in 1:length(gubun)){
if(gubun[i]=='S'){
colors<-c(color,'red')}
sizes<-c(sizes, 2)
else {
colors<-c(colors,'green')
sizes<-c(sizes, 6)
}
}
#학생은 레드로 교수는 그린으로
color<-c()
sizes<-c()
}
}
for (i in 1:length(gubun)){
if(gubun[i]=='S'){
colors<-c(color,'red')
sizes<-c(sizes, 2)}
else {
colors<-c(colors,'green')
sizes<-c(sizes, 6)}
}
plot(g, layout=layout.fruchterman.reingold, vertex.size=sizes, edge.arrow.size=0.5,
vertex.color=colors)
plot(g, layout=layout.fruchterman.reingold, vertex.size=sizes, edge.arrow.size=0.5,
vertex.color=colors, vertex.label=NA)
plot(g, layout=layout.fruchterman.reingold, vertex.size=sizes, edge.arrow.size=0,
vertex.color=colors, vertex.label=NA)
plot(g, layout=layout.kamada.kawai, vertex.size=sizes, edge.arrow.size=0,
vertex.color=colors, vertex.label=NA)
shape<-c()
}
}
}
}
shapes<-c()
}
gubun<-str_sub(gubun1, start=1, end=1)
gubun
shapes<-c()
}
plot(g, layout=layout.kamada.kawai, vertex.size=sizes, edge.arrow.size=0,
vertex.color=colors, vertex.shape=shapes, vertex.color=colors)
#메르스 환자
virus1<-read.csv('메르스전염현황.csv', header=T)
d3SimpleNetwork(virus1, width=600, heigh=600, file='graph/mers.html')
setwd("D:/Workspace/R_Data_Analysis/Part4")
d3SimpleNetwork(virus1, width=600, heigh=600, file='graph/mers.html')
#Treemap
install.packages("treemap")
library(Treemap)
library(treemap)
total<-read.csv('data/학생시험결과_전체점수.csv', header=T, sep=',')
total
treemap(total, vSize='점수',index=c('점수','이름'))
treemap(total, vSize='점수',index=c('조','이름'))
treemap(total, vSize='점수',index=c('점수','조','이름'))
treemap(total, vSize='점수',index=c('조','이름'))
treemap(total, vSize='점수',index=c('점수','조','이름'))
total<-read.csv('data/학생별전체성적_new.txt', header=T, sep',')
total<-read.csv('data/학생별전체성적_new.txt', header=T, sep',')
total<-read.table('data/학생별전체성적_new.txt', header=T, sep',')
total<-read.table('학생별전체성적_new.txt', header=T, sep',')
setwd("D:/Workspace/R_Data_Analysis/Part4/data")
total<-read.table('학생별전체성적_new.txt', header=T, sep',')
total<-read.table('학생별전체성적_new.txt', header=T, sep',')
total
row.names(total)<-total$이름름
row.names(total)<-total$이름
total<-read.table('학생별전체성적_new.txt', header=T, sep',')
total
row.names(total)<-total$이름
row.names(total)<-total$이름
total<-total(,2:7)
total
row.names(total)<-total$이름
total<-total[,2:7]
total
#Stars
total<-read.table('학생별전체성적_new.txt', header=T, sep',')
star(total,flip.label=FALSE, draw.segment=FALSE, frame.plot=TRUE,full=TRUE,
main='학생별 과목별 성적분석-STAR Chart')
lab<-names(total)
value<-table(lab)
value
pie(value, labels = lab,radius = 0.1, cex=0.6, col=NA)
#나이팅게일차트
stars(total, flip.labels = FALSE, draw.segments = TRUE, frame.plot = TRUE, full=FALSE,
main='학생별 과목별 성적분석-나이팅게임 챠트')
star(total,flip.label=FALSE, draw.segment=FALSE, frame.plot=TRUE,full=TRUE,
main='학생별 과목별 성적분석-STAR Chart')
label<-names(total)
value<-table(label)
color<-c('black','red','green','blue','cyan','violet')
pie(value,label, col=color,radius=0.1, cex=0.6)
stars(total, flip.labels = FALSE, draw.segments = TRUE, frame.plot = TRUE, full=FALSE,
main='학생별 과목별 분석 다이어그램-반원챠트')
install.packages('fmsb')
library(fmsb)
layout<-data.frame(
분석력=c(5,1)
창의력=c(15,3)
판단력=c(3,0)
리더쉽=c(5,1)
사교성=c(5,1)
)
layout<-data.frame(
분석력=c(5,1)
창의력=c(15,3)
판단력=c(3,0)
리더쉽=c(5,1)
사교성=c(5,1))
layout<-data.frame(
분석력=c(5,1)
창의력=c(15,3)
판단력=c(3,0)
리더쉽=c(5,1)
사교성=c(5,1))
set.seed(123)
data1<-data.frame(
분석력=runif(3,1,5) #랜덤숫자 뽑아줌, 1에서 5까지 3개!
창의력=rnorm(3,10,2)
판단력=c(0.5,NA, 3)
리더쉽=runif(3,1,5)
사교성=c(5,2,5,4)
)
layout<-data.frame(
분석력=c(5,1),
창의력=c(15,3),
판단력=c(3,0),
리더쉽=c(5,1),
사교성=c(5,1))
data1<-data.frame(
분석력=runif(3,1,5), #랜덤숫자 뽑아줌, 1에서 5까지 3개!
창의력=rnorm(3,10,2),
판단력=c(0.5,NA, 3),
리더쉽=runif(3,1,5),
사교성=c(5,2,5,4)
)
data1<-data.frame(
분석력=runif(3,1,5), #랜덤숫자 뽑아줌, 1에서 5까지 3개!
창의력=rnorm(3,10,2), #균등분포
판단력=c(0.5,NA, 3),
리더쉽=runif(3,1,5),
사교성=c(5,2,5,4))
runif(10,2,5)
rnorm(10)
rnorm(10, 5, 2)
data1<-data.frame(
분석력=runif(3,1,5), #랜덤숫자 뽑아줌, 1에서 5까지 3개!
창의력=rnorm(3,10,2), #균등분포
판단력=c(0.5,NA, 3),
리더쉽=runif(3,1,5),
사교성=c(5,2.5,4))
data2<-rbind(layout. data1)
op<-par(mar=c(1, 0.5, 3, 1), mfrow=c(2,2))
data2<-rbind(layout, data1)
op<-par(mar=c(1, 0.5, 3, 1), mfrow=c(2,2))
radarchart(data2, axistype=1, seg=5, plty=1, title='첫번째 타입')
radarchart(data2, axistype=2, pcol=topo.colors(3), plty=1, title='두번째 타입')
radarchart(data2, axistype=3, pty=32, plty=1, axislabcol='grey', na.itp=FALSE,
title='세번째 타입')
radarchart(data2, axistype=0, plwd=1:5, pcol=1, title='네번째 타입')
par(mar=c(0,0,0,0), mfrow=c(1,1))
#==============================저 수준 작도 함수================================================
segments(2,2,3,3)
#==============================저 수준 작도 함수================================================
var1<-1:5
plot(var1)
segments(2,2,3,3)
arrows(5,5,3,3)
arrows(5,5,4,4)
text(a,b, labels)
text(1, 4, 'labels')
text(2, 4, 'labels')
plot(var1)
segments(2,2,3,3)
arrows(5,5,4,4)
text(2, 4, 'labels')
title('this is test','sub')
title(3,2,'this is test','sub', srt=45)
plot(var1)
segments(2,2,3,3)
arrows(5,5,4,4)
text(2, 4, 'labels')
title(3,2,'this is test', srt=45)
text(2, 8, 'labels')
text(9, 8, 'labels')
text(9, 8, 'labels',srt=45)
plot(var1)
segments(2,2,3,3)
arrows(5,5,4,4)
text(9, 8, 'labels',srt=45)
text(3, 2, 'labels',srt=45)
abine(h=8)
rect(1,6,3,8)
arrows(1,1,5,5)
text(3, 2, 'TEXT')
plot(1:15)
abine(h=8)
rect(1,6,3,8)
arrows(1,1,5,5)
text(8,9, 'TEXT')
title('this is test', srt=45)
title('this is test', 'sub')
plot(1:15)
abine(h=8)
rect(1,6,3,8)
arrows(1,1,5,5)
text(8,9, 'TEXT')
title('this is test', 'sub')
plot(1:15)
abline(h=8)
rect(1,6,3,8)
arrows(1,1,5,5)
text(8,9, 'TEXT')
title('this is test', 'sub')
iris
view(iris)
view(iris)
View(iris)
ir<-iris
plot(ir,Sepal.Length, Sepal.Width)
plot(ir)
plot(ir$Sepal.Length, ir$Sepal.Width)
plot(ir$Sepal.Length, ir$Sepal.Width, xlim=c(1,10), ylim = c(1,10))
plot(ir$Sepal.Length, ir$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
plot(ir$Sepal.Length, ir$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
ir<-iris
plot(ir$Sepal.Length, ir$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
#1
plot(ir$Sepal.Length=='setosa', ir$Sepal.Width=='setosa', xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
#1
plot(ir$Sepal.Length='setosa', ir$Sepal.Width='setosa', xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
a<-subset(ir, select=c('setosa'))
a<-subset(ir, select=c(setosa))
attach(ir)
ir%>%
#1
plot(ir$Sepal.Length='setosa', ir$Sepal.Width='setosa', xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
a<-filter(ir, Species==setosa)
a<-filter(ir, Species=='setosa')
se<-filter(ir, Species=='setosa')
#1
plot(se$Sepal.Length, se$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
View(se)
se<-filter(ir, Species=='setosa')
#1
plot(se$Sepal.Length, se$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
se<-filter(iris, Species=='setosa')
#1
plot(se$Sepal.Length, se$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
se<-filter(iris$Species %in% c('setosa')
group_by(Species)
iris %>%
filter(Species %in% c('setosa') %>%
group_by(Species)
group_by(Species)
arrange(Sepal.Length)
iris %>%
filter(Species %in% c('setosa') %>%
group_by(Species) %>%
arrange(Sepal.Length)
filter(Species %in% c('setosa')
iris %>%
filter(Species=='setosa')
iris %>%
filter(Species=='setosa') %>%
select(Sepal.Width, Sepal.Length)
se<-iris %>%
filter(Species=='setosa') %>%
select(Sepal.Width, Sepal.Length)
se<-iris %>%
filter(Species=='setosa') %>%
select(Sepal.Width, Sepal.Length) %>%
arrange(Sepal.Length)
se<-filter(iris, Species=='setosa')
#1
plot(se$Sepal.Length, se$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
se$filter(iris, Species=='setosa')
#1
plot(iris$Species$Sepal.Length, iris$Species$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
a<-filter(iris, Species=='setosa')
a<-filter(iris, Species=='setosa')
#1
plot(a$Sepal.Length, a$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
se<-subset(a, select=c(Sepal.Length, Sepal.Width))
se<-subset(a, select=c(Sepal.Length, Sepal.Width))
iris %>% filter(Species=='setosa')
se<-iris %>% filter(Species=='setosa')
#1
plot(a$Sepal.Length, a$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
#1
plot(se$Sepal.Length, se$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
se<-iris %>% filter(Species=='setosa')
#1
plot(se$Sepal.Length, se$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
#1
plot(se$Sepal.Length, se$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
#1
plot(se$Sepal.Length, se$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
var2<-c(2,2,2)
plot(var2)
par(mfrow=c(1,3))
#1
plot(iris$Sepal.Length, iris$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
#1
plot(iris$Sepal.Length=='setosa', iris$Sepal.Width=='setosa', xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
se<-iris %>% filter(Species=='setosa')
#1
plot(iris$Sepal.Length, iris$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
#1
plot(se$Sepal.Length, se$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
setos<-subset(iris, Species=='setosa')
#1
plot(setos$Sepal.Length, setos$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
setos<-subset(iris, Species=='setosa')
#1
plot(setos$Sepal.Length, setos$Sepal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
versi<-subset(iris, Species=='versicolor')
verg<-subset(iris, Species=='verginica')
plot(setos$Petal.Length, setos$Petal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
setos<-subset(iris, Species=='setosa')
plot(setos$Petal.Length, setos$Petal.Width, xlim=c(1,10), ylim = c(1,10),
xlab='sepal length', ylab = 'sepal width')
plot(setos$Sepal.Length, setos$Sepal.Width, xlim=c(0,9), ylim = c(0,9),
xlab='sepal length', ylab = 'sepal width')
plot(setos$Petal.Length, setos$Petal.Width, xlim=c(0,9), ylim = c(0,9),
xlab='sepal length', ylab = 'sepal width')
plot(setos$Petal.Length, setos$Petal.Width, xlim=c(0,9), ylim = c(0,9),
xlab='Petal length', ylab = 'Petal width')
plot(versi$Petal.Length, versi$Petal.Width, xlim=c(0,9), ylim = c(0,9),
xlab='Petal length', ylab = 'Petal width')
plot(versi$Sepal.Length, versi$Sepal.Width, xlim=c(0,9), ylim = c(0,9),
xlab='sepal length', ylab = 'sepal width')
plot(verg$Petal.Length, verg$Petal.Width, xlim=c(0,9), ylim = c(0,9),
xlab='Petal length', ylab = 'Petal width')
virg<-subset(iris, Species=='virginica')
plot(virg$Petal.Length, virg$Petal.Width, xlim=c(0,9), ylim = c(0,9),
xlab='Petal length', ylab = 'Petal width')
plot(virg$Sepal.Length, virg$Sepal.Width, xlim=c(0,9), ylim = c(0,9),
xlab='sepal length', ylab = 'sepal width')
#2
iris %>%
group_by(Species)%>%
summarise(average=mean(Sepal.Length:Petal.Width))
#2
tapply(iris$Sepal.Length, iris$Sepal.Width, iris$Petal.Length, iris$Petal.Width, mean)
#2
tapply(iris$Sepal.Length, iris$Sepal.Width, iris$Petal.Length, iris$Petal.Width, (mean))
#2
aggregate(Sepal.Length~Petal.Width, iris, mean)
iris %>%
group_by(Species)%>%
summarise(average=mean(Sepal.Length:Petal.Width))
iris %>%
group_by(Species)%>%
summarise(average=mean(Sepal.Length))
iris %>%
group_by(Species)%>%
summarise(average=mean(Sepal.Width))
#2
attach(iris)
tapply(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width, mean)
aa<-tapply(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width, mean)
tapply(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width, mean)
#2
aa<-iris %>%
group_by(Species)%>%
summarise(average=mean(Sepal.Width, Sepal.Length, Petal.Width, Petal.Length, na.rm=TRUE))
#2
aa<-iris %>%
group_by(Species)%>%
summarise(average=mean(Sepal.Width, na.rm=TRUE))
#2
aa<-iris %>%
group_by(Species)%>%
summarise_each(funs(mean, n()), Sepal.Length, Sepal.Width, Petal.Width, Petal.Length)
library(plyr)
aa<-iris %>%
group_by(Species)%>%
summarise_each(funs(mean, n()), Sepal.Length, Sepal.Width, Petal.Width, Petal.Length)
library(dplyr)
aa<-iris %>%
group_by(Species)%>%
summarise_each(funs(mean, n()), Sepal.Length, Sepal.Width, Petal.Width, Petal.Length)
aa<-iris %>%
group_by(Species)%>%
summarise_each(list(mean, n()), Sepal.Length, Sepal.Width, Petal.Width, Petal.Length)
aa<-iris %>%
group_by(Species)%>%
summarise_each(list(mean, Sepal.Length, Sepal.Width, Petal.Width, Petal.Length)
summarise_each(list(mean,n(), Sepal.Length, Sepal.Width, Petal.Width, Petal.Length)
aa<-iris %>%
group_by(Species)%>%
summarise_each(list(mean),Sepal.Length, Sepal.Width, Petal.Width, Petal.Length)
barplot(aa)
aa
barplot(x, names=c(5,3), col=c('green','yellow'), horiz=T, xlim=c(0,10))
barplot(aa, horiz=T)
x<-1:5
barplot(x, horiz=T)
x<-matrix(c(5,4,3,2), nrow=2)
barplot(x, beside=T)
barplot(x, beside=T, names=c(5,3))
barplot(x, beside=T, names=c(5,3), col=c('green','yellow'))
barplot(x, beside=T, names=c(5,3), col=c('green','yellow'), horiz=T)
par(oma=c(1,0.5, 1, 0.5)) #하 좌 상 우 여백 지정
barplot(x, names=c(5,3), col=c('green','yellow'), horiz=T, xlim=c(0,10))
v1<-c(100, 120, 140, 160, 180)
v2<-c(120, 130, 150, 140, 170)
v3<-c(140, 170, 120, 110, 160)
qty<-data.frame(BANANA=v1, cherry=v2, orange=v3)
qty
